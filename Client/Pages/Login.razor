@page "/"
@layout LoginLayout

@inject HttpClient httpClient
@using ArticleShop.Client.Extensors
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider authenticationProvider
@inject NavigationManager navManager
@inject NotificationService notify

<div class="row mt-5">
    <div class="col-lg-4 offset-lg-4 border">

        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>

        <div class="mb-3">
            <label>Correo</label>
            <input @bind="login.Correo" class="form-control"/>
        </div>

        <div class="mb-3">
            <label>Contrase√±a</label>
            <input @bind="login.Clave" class="form-control"/>
        </div>

        <div class="mb-3">
            <button type="button" @onclick="IniciarSesion" class="btn btn-primary">Iniciar Sesion</button>
        </div>
    </div>
</div>

@code
{
    private LoginDTO login = new LoginDTO();

    private async Task IniciarSesion()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginDTO>("api/Usuarios/Login", login);

        if(loginResponse.IsSuccessStatusCode)
        {
            var sesionUsuario = await loginResponse.Content.ReadFromJsonAsync<SesionDTO>();
            var autenticacion = (Autenticacion)authenticationProvider;
            await autenticacion.ActualizarEstado(sesionUsuario);

            navManager.NavigateTo("/index");
        }
        else if(loginResponse.StatusCode == System.Net.HttpStatusCode.NotFound)
        {
            notify.ShowNotification(titulo: "Error", mensaje: "Ese usuario no existe", NotificationSeverity.Error);
        }
        else
        {
            notify.ShowNotification(titulo: "Error", mensaje: "Ha ocurrido un error, intentelo de nuevo", NotificationSeverity.Warning);
        }
    }
}