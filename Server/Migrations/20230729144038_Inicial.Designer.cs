// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArticleShop.Server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230729144038_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Articulos", b =>
                {
                    b.Property<int>("ArticuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("Existencia")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("ArticuloId");

                    b.ToTable("Articulos");

                    b.HasData(
                        new
                        {
                            ArticuloId = 1,
                            Categoria = "Utiles escolares",
                            Descripcion = "Lapiz",
                            Existencia = 500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 10.0
                        },
                        new
                        {
                            ArticuloId = 2,
                            Categoria = "Utiles escolares",
                            Descripcion = "Lapiceros",
                            Existencia = 500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 15.0
                        },
                        new
                        {
                            ArticuloId = 3,
                            Categoria = "Utiles escolares",
                            Descripcion = "Borras",
                            Existencia = 600,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 15.0
                        },
                        new
                        {
                            ArticuloId = 4,
                            Categoria = "Utiles escolares",
                            Descripcion = "Cuadernos",
                            Existencia = 300,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 60.0
                        },
                        new
                        {
                            ArticuloId = 5,
                            Categoria = "Utiles escolares",
                            Descripcion = "Reglas",
                            Existencia = 300,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 50.0
                        },
                        new
                        {
                            ArticuloId = 6,
                            Categoria = "Utiles escolares",
                            Descripcion = "Carpetas",
                            Existencia = 600,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 30.0
                        },
                        new
                        {
                            ArticuloId = 7,
                            Categoria = "Utiles escolares",
                            Descripcion = "Pegamentos",
                            Existencia = 350,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 50.0
                        },
                        new
                        {
                            ArticuloId = 8,
                            Categoria = "Utiles escolares",
                            Descripcion = "Tijeras",
                            Existencia = 300,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 60.0
                        },
                        new
                        {
                            ArticuloId = 9,
                            Categoria = "Utiles escolares",
                            Descripcion = "Marcadores",
                            Existencia = 500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 50.0
                        },
                        new
                        {
                            ArticuloId = 10,
                            Categoria = "Utiles escolares",
                            Descripcion = "Resaltadores",
                            Existencia = 500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 50.0
                        },
                        new
                        {
                            ArticuloId = 11,
                            Categoria = "Utiles escolares",
                            Descripcion = "Compases",
                            Existencia = 500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 60.0
                        },
                        new
                        {
                            ArticuloId = 12,
                            Categoria = "Utiles escolares",
                            Descripcion = "Calculadoras",
                            Existencia = 350,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 150.0
                        },
                        new
                        {
                            ArticuloId = 13,
                            Categoria = "Utiles escolares",
                            Descripcion = "Mochilas",
                            Existencia = 300,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 300.0
                        },
                        new
                        {
                            ArticuloId = 14,
                            Categoria = "Utiles escolares",
                            Descripcion = "Papeles",
                            Existencia = 2500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 5.0
                        },
                        new
                        {
                            ArticuloId = 15,
                            Categoria = "Utiles escolares",
                            Descripcion = "Papel para impresora",
                            Existencia = 2000,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 7.0
                        },
                        new
                        {
                            ArticuloId = 16,
                            Categoria = "Utiles escolares",
                            Descripcion = "Sobres",
                            Existencia = 2000,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 15.0
                        },
                        new
                        {
                            ArticuloId = 17,
                            Categoria = "Utiles escolares",
                            Descripcion = "Pegatinas",
                            Existencia = 1500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 35.0
                        },
                        new
                        {
                            ArticuloId = 18,
                            Categoria = "Utiles escolares",
                            Descripcion = "Rotuladores",
                            Existencia = 500,
                            Fecha = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Precio = 60.0
                        });
                });

            modelBuilder.Entity("Compras", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadProducida")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaDeCompra")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("CompraId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("ComprasDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadUtilizada")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleId");

                    b.HasIndex("CompraId");

                    b.ToTable("ComprasDetalle");
                });

            modelBuilder.Entity("Entrada", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad_Anterior")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Motivo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Total")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventarioId");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("LoginDTO", b =>
                {
                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.HasKey("Correo");

                    b.ToTable("LoginDTO");
                });

            modelBuilder.Entity("Salida", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad_Anterior")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Motivo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Total")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventarioId");

                    b.ToTable("Salidas");
                });

            modelBuilder.Entity("SesionDTO", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .HasColumnType("TEXT");

                    b.HasKey("Nombre");

                    b.ToTable("SesionDTO");
                });

            modelBuilder.Entity("ComprasDetalle", b =>
                {
                    b.HasOne("Compras", null)
                        .WithMany("CompraDetalle")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Compras", b =>
                {
                    b.Navigation("CompraDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
